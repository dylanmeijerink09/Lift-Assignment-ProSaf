<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{691ad225-5b7f-4f82-b1a8-a7e9bbc42919}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	floorOneLamp : BOOL := FALSE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
CASE GVL.caseInput OF
	0: /// Init lift values
		GVL.instructionString := 'Initialising lift';
		GVL.currentFloor := 0;
		GVL.targetFloor := 0;
		GVL.liftMoving := FALSE;
		GVL.openDoor := FALSE;
		
		// Set lift to operating mode
		GVL.caseInput := 1;

	1: /// Wait for outside user input, set targetfloor and LED
		// Update instruction string
		GVL.instructionString := 'Press any of the outside user input';

		// Set target floor to corresponding button call
		IF GVL.callLevel0 THEN
			GVL.targetFloor := 0;
			
			// Set the case input
			GVL.caseInput := 2;
		ELSIF GVL.callLevel1 THEN
			GVL.targetFloor := 1;
			
			// Set the case input
			GVL.caseInput := 2;
		ELSIF GVL.callLevel2 THEN
			GVL.targetFloor := 2;
			
			// Set the case input
			GVL.caseInput := 2;
		END_IF
			
	2: /// Check if lift current floor == target floor, else move lift to correct floor
		// Update instruction string
		GVL.instructionString := 'Checking if current floor == target floor';
		
		// Check if lift is at target floor
		IF CheckIfAtFloor() THEN
			
			// Update instruction string
			GVL.instructionString := 'Arrived at target floor, opening lift doors and waiting for inside user input';
				
			// If floor was called from outside 
			IF GVL.liftOperation = FALSE THEN
				// Open doors
				GVL.openDoor := TRUE;
				
				// Wait for input inside lift
				GVL.caseInput := 5;	
				
			// If floor was called from inside
			ELSIF GVL.liftOperation = TRUE THEN
				// Update instruction string
				GVL.instructionString := 'Arrived at target floor, waiting for user to exis (3s)';

				// Open doors
				GVL.openDoor := TRUE;
				
				// Simulate lift door timer
				GVL.simulationTime(IN := TRUE, PT := GVL.simulationPace);
				
				// Simulate lift door timer
				IF GVL.simulationTime.Q THEN
					// Update instruction string
					GVL.instructionString := 'Closing lift foors and waiting for new outside user input';
					
					// Reset timer and open doors
					GVL.simulationTime(IN := FALSE);
					GVL.openDoor := FALSE;
					
					// Reset liftOperation
					GVL.liftOperation := FALSE;
					
					// Set case to 2 and wait for outside user input
					GVL.caseInput := 1;			
				END_IF
			END_IF
		END_IF
		
	3: /// Move lift downwards
		
		// Update instruction string
		GVL.instructionString := 'Moving lift downwards';
		
		// Set lift direction and move lift
		GVL.liftDirection := TRUE;
		GVL.liftMoving := TRUE;
		
		// Simulate lift timer
		GVL.simulationTime(IN := TRUE, PT := GVL.simulationPace);
		
		IF GVL.simulationTime.Q THEN
			// Reset timer
			GVL.simulationTime(IN := FALSE);	
		
			// Decrease lift level by 1
			GVL.currentFloor := GVL.currentFloor - 1;
			
			// Set case input
			GVL.caseInput := 2;
		END_IF
		
	4: /// Move lift upwards
		// Update instruction string
		GVL.instructionString := 'Moving lift upwards';
		
		//
		GVL.liftDirection := TRUE;
		GVL.liftMoving := TRUE;
		
		// Set lift direction and move lift
		GVL.simulationTime(IN := TRUE, PT := GVL.simulationPace);
		
		IF GVL.simulationTime.Q THEN
			// Reset timer	
			GVL.simulationTime(IN := FALSE);

			// Increase lift level by 1
			GVL.currentFloor := GVL.currentFloor + 1;
			
			// Set case input
			GVL.caseInput := 2;
		END_IF
		
	5: /// Wait for user input inside lift to move
		// Set target floor to corresponding floor, close doors and move lift
		IF GVL.setTargetLevel0 THEN
			GVL.targetFloor := 0;
			GVL.openDoor := FALSE;
			GVL.liftOperation := TRUE;
			GVL.caseInput := 2;
		ELSIF GVL.setTargetLevel1 THEN
			GVL.targetFloor := 1;
			GVL.openDoor := FALSE;
			GVL.liftOperation := TRUE;
			GVL.caseInput := 2;
		ELSIF GVL.setTargetLevel2 THEN
			GVL.targetFloor := 2;
			GVL.openDoor := FALSE;
			GVL.liftOperation := TRUE;
			GVL.caseInput := 2;
		END_IF
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="627" Count="2" />
      <LineId Id="631" Count="0" />
      <LineId Id="761" Count="0" />
      <LineId Id="632" Count="7" />
      <LineId Id="641" Count="0" />
      <LineId Id="763" Count="0" />
      <LineId Id="782" Count="0" />
      <LineId Id="764" Count="0" />
      <LineId Id="762" Count="0" />
      <LineId Id="642" Count="0" />
      <LineId Id="644" Count="4" />
      <LineId Id="650" Count="4" />
      <LineId Id="656" Count="5" />
      <LineId Id="783" Count="0" />
      <LineId Id="767" Count="1" />
      <LineId Id="784" Count="0" />
      <LineId Id="786" Count="1" />
      <LineId Id="789" Count="0" />
      <LineId Id="788" Count="0" />
      <LineId Id="780" Count="0" />
      <LineId Id="665" Count="3" />
      <LineId Id="675" Count="6" />
      <LineId Id="777" Count="0" />
      <LineId Id="781" Count="0" />
      <LineId Id="779" Count="0" />
      <LineId Id="682" Count="0" />
      <LineId Id="684" Count="5" />
      <LineId Id="778" Count="0" />
      <LineId Id="790" Count="0" />
      <LineId Id="690" Count="0" />
      <LineId Id="792" Count="0" />
      <LineId Id="791" Count="0" />
      <LineId Id="691" Count="0" />
      <LineId Id="693" Count="0" />
      <LineId Id="793" Count="0" />
      <LineId Id="694" Count="1" />
      <LineId Id="794" Count="0" />
      <LineId Id="696" Count="0" />
      <LineId Id="698" Count="4" />
      <LineId Id="795" Count="0" />
      <LineId Id="797" Count="0" />
      <LineId Id="771" Count="0" />
      <LineId Id="703" Count="0" />
      <LineId Id="799" Count="0" />
      <LineId Id="798" Count="0" />
      <LineId Id="705" Count="0" />
      <LineId Id="707" Count="5" />
      <LineId Id="800" Count="0" />
      <LineId Id="713" Count="3" />
      <LineId Id="802" Count="0" />
      <LineId Id="801" Count="0" />
      <LineId Id="717" Count="2" />
      <LineId Id="772" Count="1" />
      <LineId Id="720" Count="0" />
      <LineId Id="804" Count="0" />
      <LineId Id="803" Count="0" />
      <LineId Id="721" Count="0" />
      <LineId Id="723" Count="1" />
      <LineId Id="805" Count="0" />
      <LineId Id="726" Count="7" />
      <LineId Id="807" Count="0" />
      <LineId Id="806" Count="0" />
      <LineId Id="734" Count="2" />
      <LineId Id="743" Count="0" />
      <LineId Id="808" Count="0" />
      <LineId Id="744" Count="1" />
      <LineId Id="747" Count="3" />
      <LineId Id="809" Count="0" />
      <LineId Id="753" Count="4" />
      <LineId Id="759" Count="1" />
      <LineId Id="738" Count="0" />
      <LineId Id="740" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>